# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - master

pool:
  vmImage: "ubuntu-latest"
strategy:
  matrix:
    Python36:
      python.version: "3.6"
    Python37:
      python.version: "3.7"
    Python38:
      python.version: "3.8"
    Python39:
      python.version: "3.9"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "$(python.version)"
    displayName: "Use Python $(python.version)"

  - script: |
      python -m pip install --upgrade pip
      pip install poetry
      poetry install
    displayName: "Install dependencies"

  - script: |
      poetry run flake8 bashplot/ --count --statistic
      poetry run black . --check -v
      poetry run isort . --check -v
      poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
      poetry run pydocstyle --convention=numpy -e bashplot/bashplot.py
    displayName: "Check style and  settings"


  - script: |
      poetry run coverage run -m pytest -vv
      poetry run coverage report -m
      poetry run coverage xml
    displayName: "pytest"
