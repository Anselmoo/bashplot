[tool.poetry]
name = "bashplot"
version = "1.2.0"
description = "Instant data plotting from the terminal into the terminal"
readme = "README.md"
authors = ["Anselm Hahn <anselm.hahn@gmail.com>"]
maintainers = ["Anselm Hahn <anselm.hahn@gmail.com>"]
license = "MIT"
repository = "https://github.com/Anselmoo/bashplot"
homepage = "https://pypi.org/project/bashplot/"
keywords = ["terminal", "data-visualization", "data-science", "database"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: System :: Shells",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Utilities",
]

    [tool.poetry.dependencies]
    python = ">=3.6.2,<3.11"
    numpy = [
        { version = "<=1.20", python = "<3.7" },
        { version = "^1.21.6", python = ">=3.7" },
    ]
    plotille = [
        { version = "<=3.8", python = "<3.7" },
        { version = "^4.0.2", python = ">=3.7" },
    ]

    [tool.poetry.dev-dependencies]
    black = "^22.8.0"
    isort = "^5.10.1"
    flake8 = [
        { version = "^4.0.1", python = "<3.7" },
        { version = "^5.0.4", python = ">=3.7" },
    ]
    pydocstyle = "^6.1.1"
    mypy = "^0.971"
    coverage = "^6.1.2"
    pytest = "^7.0.0"
    pytest-clarity = "^1.0.1"
    pytest-sugar = "^0.9.4"
    pytest-console-scripts = "^1.3.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
bashplot = "bashplot.bashplot:command_line_runner"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["poetry", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "poetry"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | test
  | tests/.*/setup.py
)/
'''

[tool.flake8]
max-doc-length = 100
max-line-length = 88
docstring-convention = "numpy"
ignore = ["E203", "W503", "W605"]
